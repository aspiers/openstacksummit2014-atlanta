commit a70065df5acce0c88c62abf06a196462031b9ea3
Author: Ralf Haferkamp <rhafer@suse.de>
Date:   Tue May 6 15:47:44 2014 +0200

    Added hack to ignore eth0 to allow use by vagrant

diff --git a/chef/cookbooks/network/recipes/default.rb b/chef/cookbooks/network/recipes/default.rb
index 7be86ad..dd266d4 100644
--- a/chef/cookbooks/network/recipes/default.rb
+++ b/chef/cookbooks/network/recipes/default.rb
@@ -256,6 +256,8 @@ Nic.refresh_all
 
 # Kill any nics that we don't want hanging around anymore.
 Nic.nics.each do |nic|
+  # Hack to make vagrant happy
+  next if nic.name == "eth0"
   next if ifs[nic.name]
   # If we are bringing this node under management, kill any nics we did not
   # configure, except for loopback interfaces.
@@ -395,6 +397,8 @@ when "centos","redhat"
   end
 when "suse"
   Nic.nics.each do |nic|
+    # Hack to make vagrant happy
+    next if nic.name == "eth0"
     next unless ifs[nic.name]
     template "/etc/sysconfig/network/ifcfg-#{nic.name}" do
       source "suse-cfg.erb"
diff --git a/chef/data_bags/crowbar/bc-template-network.json b/chef/data_bags/crowbar/bc-template-network.json
index ddee3a0..702dc9f 100644
--- a/chef/data_bags/crowbar/bc-template-network.json
+++ b/chef/data_bags/crowbar/bc-template-network.json
@@ -69,13 +69,13 @@
           "pattern": "team/.*/.*",
           "conduit_list": { 
             "intf0": {
-              "if_list": [ "1g1", "1g2" ]
+              "if_list": [ "1g2", "1g3" ]
             },
             "intf1": {
-              "if_list": [ "1g1", "1g2" ]
+              "if_list": [ "1g2", "1g3" ]
             },
             "intf2": {
-              "if_list": [ "1g1", "1g2" ]
+              "if_list": [ "1g2", "1g3" ]
             }
           }
         },
@@ -97,13 +97,13 @@
           "pattern": "single/.*/.*",
           "conduit_list": { 
             "intf0": {
-              "if_list": [ "?1g1" ]
+              "if_list": [ "?1g2" ]
             },
             "intf1": {
-              "if_list": [ "?1g1" ]
+              "if_list": [ "?1g2" ]
             },
             "intf2": {
-              "if_list": [ "?1g1" ]
+              "if_list": [ "?1g2" ]
             }
           }
         },
commit 8dc74f0b571a1cd58ec96f3638961f488fc1babc
Author: Ralf Haferkamp <rhafer@suse.de>
Date:   Tue May 13 01:51:31 2014 +0200

    Fix bonding mode setting
    
    - Use the right attribute for getting the bonding mode
    - Update the bond if the bonding mode changes

diff --git a/chef/cookbooks/network/recipes/default.rb b/chef/cookbooks/network/recipes/default.rb
index 7be86ad..01c9931 100644
--- a/chef/cookbooks/network/recipes/default.rb
+++ b/chef/cookbooks/network/recipes/default.rb
@@ -154,12 +154,13 @@ node["crowbar"]["network"].keys.sort{|a,b|
   else
     # We want a bond.  Figure out what mode it should be.  Default to 5
     team_mode = conduit_map[conduit]["team_mode"] ||
-      (network["teaming"] && network["teaming"]["mode"]) || 5
+      (node["network"]["teaming"] && node["network"]["teaming"]["mode"]) || 5
     # See if a bond that matches our specifications has already been created,
     # or if there is an empty bond lying around.
     bond = Nic::Bond.find(base_ifs)
     if bond
       Chef::Log.info("Using bond #{bond.name} for network #{name}")
+      bond.mode = team_mode if bond.mode != team_mode
     else
       bond = Nic::Bond.create("bond#{Nic.nics.select{|i| Nic::bond?(i)}.length}",
                        team_mode)
